# Copy this file to .env and fill in your secrets locally
# Do NOT put real secrets in this file. It is committed to Git.
# Use obvious placeholders so GitHub push protection won't think they are real.

# MongoDB connection (example only; customize in your private .env)
# If your password has special characters, URL-encode them.
# Example format:
# mongodb+srv://<username>:<URL_ENCODED_PASSWORD>@<cluster-host>/<db-name>?retryWrites=true&w=majority&appName=<appName>
MONGODB_URI=mongodb+srv://<username>:<URL_ENCODED_PASSWORD>@<cluster-host>/<db-name>?retryWrites=true&w=majority&appName=<appName>

# Optional: server port
PORT=3000

# AWS / S3 configuration (placeholders only)
# Leave these blank here; fill real values only in your private .env
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
S3_BUCKET=
S3_SITES_PREFIX=sites
S3_UPLOADS_PREFIX=uploads

# Authentication
# Used to sign/verify JWTs for login. Use a strong random string in your private .env
# Example: openssl rand -base64 32
JWT_SECRET=
CDN_DOMAIN=

# SES / email
SES_SENDER=
SES_FROM_NAME=

# Google OAuth
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
# For local dev, e.g. http://localhost:3000/api/auth/oauth/google/callback
GOOGLE_CALLBACK_URL=
# PostMessage target origin for OAuth popup to send token back
OAUTH_POSTMESSAGE_ORIGIN=